import {
  PsBevelEmbossDirection,
  PsBevelEmbossStyle,
  PsBevelEmbossTechnique,
  PsBlendMode,
  PsBlendingOptionsBlendIf,
  PsBlendingOptionsKnockout,
  PsColorOrGradient,
  PsGradientMethod,
  PsInnerGlowSource,
  PsInnerGlowTechnique,
  PsLayer,
  PsLayerKind,
  PsOuterGlowTechnique,
} from '../types/psLayer';

export const sampleLayerList: PsLayer[] = [
  {
    id: 1,
    layerName: 'Shape Layer 1',
    lockStatus: {
      transparentPixelLock: true,
      imagePixelLock: false,
      positionLock: false,
      allAttributesLock: false,
    },
    layerGroupId: 0,
    isVisible: true,
    layerKind: PsLayerKind.Shape,
    pathId: 0,
    clippingTargetLayerId: 0,
    clippedLayerIds: [],
    layerMaskId: 1,
    isLayerMaskLinked: true,
    isLayerEffectEnabled: false,
    linkedLayerIds: [],
    layerStyle: {
      blendingOptions: {
        blendMode: PsBlendMode.Normal,
        opacity: 100,
        fillOpacity: 100,
        channels: {
          red: true,
          green: true,
          blue: true,
        },
        knockout: PsBlendingOptionsKnockout.None,
        blendInteriorEffects: true,
        blendClippedLayers: true,
        transparencyShapesLayer: 0,
        layerMaskHideEffects: false,
        vectorMaskHideEffects: false,
        blendIf: PsBlendingOptionsBlendIf.Gray,
        blendIfCurrentLayerBlackValue: 0,
        blendIfCurrentLayerWhiteValue: 255,
        blendIfUnderlyingLayerBlackValue: 0,
        blendIfUnderlyingLayerWhiteValue: 255,
      },
      bevelEmboss: {
        isEnabled: false,
        style: PsBevelEmbossStyle.Innerbevel,
        technique: PsBevelEmbossTechnique.Smooth,
        depth: 0,
        direction: PsBevelEmbossDirection.Up,
        size: 0,
        soften: 0,
        angleOfLightSource: 120,
        altitude: 30,
        useGlobalLight: false,
        glossContourCurveId: 0,
        isGlossContourAntiAliased: false,
        highlightMode: PsBlendMode.Screen,
        highlightColor: {
          red: 255,
          green: 255,
          blue: 255,
        },
        highlightOpacity: 50,
        shadowMode: PsBlendMode.Multiply,
        shadowColor: {
          red: 0,
          green: 0,
          blue: 0,
        },
        shadowOpacity: 50,
        isContourEnabled: false,
        contour: {
          contourCurveId: 0,
          isAntiAliased: false,
          range: 50,
        },
        isTextureEnabled: false,
        texture: {
          patternId: 0,
          scale: 100,
          depth: 1,
          isInverted: false,
          isLinkedWithLayer: true,
        },
      },
      strokes: [],
      innerShadows: [],
      innerGlow: {
        isEnabled: false,
        blendMode: PsBlendMode.Screen,
        opacity: 35,
        noise: 0,
        colorOrGradient: PsColorOrGradient.Gradient,
        color: {
          red: 255,
          green: 255,
          blue: 255,
        },
        gradientId: 0,
        gradientMethod: PsGradientMethod.Perceptual,
        technique: PsInnerGlowTechnique.Softer,
        source: PsInnerGlowSource.Edge,
        choke: 0,
        size: 7,
        contourCurveId: 0,
        isContourAntiAliased: false,
        contourRange: 50,
        jitter: 0,
      },
      satin: {
        isEnabled: false,
        blendMode: PsBlendMode.Multiply,
        color: {
          red: 0,
          green: 0,
          blue: 0,
        },
        opacity: 50,
        angle: 90,
        distance: 50,
        size: 80,
        contourCurveId: 0,
        isContourAntiAliased: true,
        isContourInverted: true,
      },
      colorOverlays: [],
      gradientOverlays: [],
      patternOverlay: {
        isEnabled: false,
        blendMode: PsBlendMode.Normal,
        opacity: 100,
        patternId: 0,
        angle: 0,
        scale: 100,
        isLinkedWithLayer: true,
      },
      outerGlow: {
        isEnabled: false,
        blendMode: PsBlendMode.Screen,
        opacity: 35,
        noise: 0,
        colorOrGradient: PsColorOrGradient.Gradient,
        color: {
          red: 255,
          green: 255,
          blue: 255,
        },
        gradientId: 0,
        gradientMethod: PsGradientMethod.Perceptual,
        technique: PsOuterGlowTechnique.Softer,
        spread: 0,
        size: 7,
        contourCurveId: 0,
        isContourAntiAliased: false,
        contourRange: 50,
        jitter: 0,
      },
      dropShadows: [],
    },
    x: 20,
    y: 30,
    width: 100,
    height: 50,
  },
  {
    id: 2,
    layerName: 'Shape Layer 2',
    lockStatus: {
      transparentPixelLock: false,
      imagePixelLock: false,
      positionLock: false,
      allAttributesLock: false,
    },
    layerGroupId: 0,
    isVisible: false,
    layerKind: PsLayerKind.Shape,
    pathId: 0,
    clippingTargetLayerId: 0,
    clippedLayerIds: [],
    layerMaskId: 0,
    isLayerMaskLinked: false,
    isLayerEffectEnabled: true,
    linkedLayerIds: [],
    layerStyle: {
      blendingOptions: {
        blendMode: PsBlendMode.Normal,
        opacity: 100,
        fillOpacity: 100,
        channels: {
          red: true,
          green: true,
          blue: true,
        },
        knockout: PsBlendingOptionsKnockout.None,
        blendInteriorEffects: true,
        blendClippedLayers: true,
        transparencyShapesLayer: 0,
        layerMaskHideEffects: false,
        vectorMaskHideEffects: false,
        blendIf: PsBlendingOptionsBlendIf.Gray,
        blendIfCurrentLayerBlackValue: 0,
        blendIfCurrentLayerWhiteValue: 255,
        blendIfUnderlyingLayerBlackValue: 0,
        blendIfUnderlyingLayerWhiteValue: 255,
      },
      bevelEmboss: {
        isEnabled: false,
        style: PsBevelEmbossStyle.Innerbevel,
        technique: PsBevelEmbossTechnique.Smooth,
        depth: 0,
        direction: PsBevelEmbossDirection.Up,
        size: 0,
        soften: 0,
        angleOfLightSource: 120,
        altitude: 30,
        useGlobalLight: false,
        glossContourCurveId: 0,
        isGlossContourAntiAliased: false,
        highlightMode: PsBlendMode.Screen,
        highlightColor: {
          red: 255,
          green: 255,
          blue: 255,
        },
        highlightOpacity: 50,
        shadowMode: PsBlendMode.Multiply,
        shadowColor: {
          red: 0,
          green: 0,
          blue: 0,
        },
        shadowOpacity: 50,
        isContourEnabled: false,
        contour: {
          contourCurveId: 0,
          isAntiAliased: false,
          range: 50,
        },
        isTextureEnabled: false,
        texture: {
          patternId: 0,
          scale: 100,
          depth: 1,
          isInverted: false,
          isLinkedWithLayer: true,
        },
      },
      strokes: [],
      innerShadows: [],
      innerGlow: {
        isEnabled: false,
        blendMode: PsBlendMode.Screen,
        opacity: 35,
        noise: 0,
        colorOrGradient: PsColorOrGradient.Gradient,
        color: {
          red: 255,
          green: 255,
          blue: 255,
        },
        gradientId: 0,
        gradientMethod: PsGradientMethod.Perceptual,
        technique: PsInnerGlowTechnique.Softer,
        source: PsInnerGlowSource.Edge,
        choke: 0,
        size: 7,
        contourCurveId: 0,
        isContourAntiAliased: false,
        contourRange: 50,
        jitter: 0,
      },
      satin: {
        isEnabled: false,
        blendMode: PsBlendMode.Multiply,
        color: {
          red: 0,
          green: 0,
          blue: 0,
        },
        opacity: 50,
        angle: 90,
        distance: 50,
        size: 80,
        contourCurveId: 0,
        isContourAntiAliased: true,
        isContourInverted: true,
      },
      colorOverlays: [],
      gradientOverlays: [],
      patternOverlay: {
        isEnabled: false,
        blendMode: PsBlendMode.Normal,
        opacity: 100,
        patternId: 0,
        angle: 0,
        scale: 100,
        isLinkedWithLayer: true,
      },
      outerGlow: {
        isEnabled: false,
        blendMode: PsBlendMode.Screen,
        opacity: 35,
        noise: 0,
        colorOrGradient: PsColorOrGradient.Gradient,
        color: {
          red: 255,
          green: 255,
          blue: 255,
        },
        gradientId: 0,
        gradientMethod: PsGradientMethod.Perceptual,
        technique: PsOuterGlowTechnique.Softer,
        spread: 0,
        size: 7,
        contourCurveId: 0,
        isContourAntiAliased: false,
        contourRange: 50,
        jitter: 0,
      },
      dropShadows: [],
    },
    x: 40,
    y: 50,
    width: 60,
    height: 60,
  },
  {
    id: 3,
    layerName: 'Shape Layer 3',
    lockStatus: {
      transparentPixelLock: true,
      imagePixelLock: true,
      positionLock: true,
      allAttributesLock: true,
    },
    layerGroupId: 0,
    isVisible: true,
    layerKind: PsLayerKind.Shape,
    pathId: 0,
    clippingTargetLayerId: 0,
    clippedLayerIds: [],
    layerMaskId: 0,
    isLayerMaskLinked: false,
    isLayerEffectEnabled: false,
    linkedLayerIds: [],
    layerStyle: {
      blendingOptions: {
        blendMode: PsBlendMode.Normal,
        opacity: 100,
        fillOpacity: 100,
        channels: {
          red: true,
          green: true,
          blue: true,
        },
        knockout: PsBlendingOptionsKnockout.None,
        blendInteriorEffects: true,
        blendClippedLayers: true,
        transparencyShapesLayer: 0,
        layerMaskHideEffects: false,
        vectorMaskHideEffects: false,
        blendIf: PsBlendingOptionsBlendIf.Gray,
        blendIfCurrentLayerBlackValue: 0,
        blendIfCurrentLayerWhiteValue: 255,
        blendIfUnderlyingLayerBlackValue: 0,
        blendIfUnderlyingLayerWhiteValue: 255,
      },
      bevelEmboss: {
        isEnabled: false,
        style: PsBevelEmbossStyle.Innerbevel,
        technique: PsBevelEmbossTechnique.Smooth,
        depth: 0,
        direction: PsBevelEmbossDirection.Up,
        size: 0,
        soften: 0,
        angleOfLightSource: 120,
        altitude: 30,
        useGlobalLight: false,
        glossContourCurveId: 0,
        isGlossContourAntiAliased: false,
        highlightMode: PsBlendMode.Screen,
        highlightColor: {
          red: 255,
          green: 255,
          blue: 255,
        },
        highlightOpacity: 50,
        shadowMode: PsBlendMode.Multiply,
        shadowColor: {
          red: 0,
          green: 0,
          blue: 0,
        },
        shadowOpacity: 50,
        isContourEnabled: false,
        contour: {
          contourCurveId: 0,
          isAntiAliased: false,
          range: 50,
        },
        isTextureEnabled: false,
        texture: {
          patternId: 0,
          scale: 100,
          depth: 1,
          isInverted: false,
          isLinkedWithLayer: true,
        },
      },
      strokes: [],
      innerShadows: [],
      innerGlow: {
        isEnabled: false,
        blendMode: PsBlendMode.Screen,
        opacity: 35,
        noise: 0,
        colorOrGradient: PsColorOrGradient.Gradient,
        color: {
          red: 255,
          green: 255,
          blue: 255,
        },
        gradientId: 0,
        gradientMethod: PsGradientMethod.Perceptual,
        technique: PsInnerGlowTechnique.Softer,
        source: PsInnerGlowSource.Edge,
        choke: 0,
        size: 7,
        contourCurveId: 0,
        isContourAntiAliased: false,
        contourRange: 50,
        jitter: 0,
      },
      satin: {
        isEnabled: false,
        blendMode: PsBlendMode.Multiply,
        color: {
          red: 0,
          green: 0,
          blue: 0,
        },
        opacity: 50,
        angle: 90,
        distance: 50,
        size: 80,
        contourCurveId: 0,
        isContourAntiAliased: true,
        isContourInverted: true,
      },
      colorOverlays: [],
      gradientOverlays: [],
      patternOverlay: {
        isEnabled: false,
        blendMode: PsBlendMode.Normal,
        opacity: 100,
        patternId: 0,
        angle: 0,
        scale: 100,
        isLinkedWithLayer: true,
      },
      outerGlow: {
        isEnabled: false,
        blendMode: PsBlendMode.Screen,
        opacity: 35,
        noise: 0,
        colorOrGradient: PsColorOrGradient.Gradient,
        color: {
          red: 255,
          green: 255,
          blue: 255,
        },
        gradientId: 0,
        gradientMethod: PsGradientMethod.Perceptual,
        technique: PsOuterGlowTechnique.Softer,
        spread: 0,
        size: 7,
        contourCurveId: 0,
        isContourAntiAliased: false,
        contourRange: 50,
        jitter: 0,
      },
      dropShadows: [],
    },
    x: 100,
    y: 10,
    width: 10,
    height: 200,
  },
  {
    id: 4,
    layerName: 'Shape Layer 4',
    lockStatus: {
      transparentPixelLock: false,
      imagePixelLock: false,
      positionLock: false,
      allAttributesLock: false,
    },
    layerGroupId: 0,
    isVisible: true,
    layerKind: PsLayerKind.Shape,
    pathId: 0,
    clippingTargetLayerId: 0,
    clippedLayerIds: [5],
    layerMaskId: 2,
    isLayerMaskLinked: false,
    isLayerEffectEnabled: false,
    linkedLayerIds: [],
    layerStyle: {
      blendingOptions: {
        blendMode: PsBlendMode.Normal,
        opacity: 100,
        fillOpacity: 100,
        channels: {
          red: true,
          green: true,
          blue: true,
        },
        knockout: PsBlendingOptionsKnockout.None,
        blendInteriorEffects: true,
        blendClippedLayers: true,
        transparencyShapesLayer: 0,
        layerMaskHideEffects: false,
        vectorMaskHideEffects: false,
        blendIf: PsBlendingOptionsBlendIf.Gray,
        blendIfCurrentLayerBlackValue: 0,
        blendIfCurrentLayerWhiteValue: 255,
        blendIfUnderlyingLayerBlackValue: 0,
        blendIfUnderlyingLayerWhiteValue: 255,
      },
      bevelEmboss: {
        isEnabled: false,
        style: PsBevelEmbossStyle.Innerbevel,
        technique: PsBevelEmbossTechnique.Smooth,
        depth: 0,
        direction: PsBevelEmbossDirection.Up,
        size: 0,
        soften: 0,
        angleOfLightSource: 120,
        altitude: 30,
        useGlobalLight: false,
        glossContourCurveId: 0,
        isGlossContourAntiAliased: false,
        highlightMode: PsBlendMode.Screen,
        highlightColor: {
          red: 255,
          green: 255,
          blue: 255,
        },
        highlightOpacity: 50,
        shadowMode: PsBlendMode.Multiply,
        shadowColor: {
          red: 0,
          green: 0,
          blue: 0,
        },
        shadowOpacity: 50,
        isContourEnabled: false,
        contour: {
          contourCurveId: 0,
          isAntiAliased: false,
          range: 50,
        },
        isTextureEnabled: false,
        texture: {
          patternId: 0,
          scale: 100,
          depth: 1,
          isInverted: false,
          isLinkedWithLayer: true,
        },
      },
      strokes: [],
      innerShadows: [],
      innerGlow: {
        isEnabled: false,
        blendMode: PsBlendMode.Screen,
        opacity: 35,
        noise: 0,
        colorOrGradient: PsColorOrGradient.Gradient,
        color: {
          red: 255,
          green: 255,
          blue: 255,
        },
        gradientId: 0,
        gradientMethod: PsGradientMethod.Perceptual,
        technique: PsInnerGlowTechnique.Softer,
        source: PsInnerGlowSource.Edge,
        choke: 0,
        size: 7,
        contourCurveId: 0,
        isContourAntiAliased: false,
        contourRange: 50,
        jitter: 0,
      },
      satin: {
        isEnabled: false,
        blendMode: PsBlendMode.Multiply,
        color: {
          red: 0,
          green: 0,
          blue: 0,
        },
        opacity: 50,
        angle: 90,
        distance: 50,
        size: 80,
        contourCurveId: 0,
        isContourAntiAliased: true,
        isContourInverted: true,
      },
      colorOverlays: [],
      gradientOverlays: [],
      patternOverlay: {
        isEnabled: false,
        blendMode: PsBlendMode.Normal,
        opacity: 100,
        patternId: 0,
        angle: 0,
        scale: 100,
        isLinkedWithLayer: true,
      },
      outerGlow: {
        isEnabled: false,
        blendMode: PsBlendMode.Screen,
        opacity: 35,
        noise: 0,
        colorOrGradient: PsColorOrGradient.Gradient,
        color: {
          red: 255,
          green: 255,
          blue: 255,
        },
        gradientId: 0,
        gradientMethod: PsGradientMethod.Perceptual,
        technique: PsOuterGlowTechnique.Softer,
        spread: 0,
        size: 7,
        contourCurveId: 0,
        isContourAntiAliased: false,
        contourRange: 50,
        jitter: 0,
      },
      dropShadows: [],
    },
    x: 0,
    y: 0,
    width: 70,
    height: 70,
  },
  {
    id: 5,
    layerName: 'Shape Layer 5',
    lockStatus: {
      transparentPixelLock: false,
      imagePixelLock: false,
      positionLock: false,
      allAttributesLock: false,
    },
    layerGroupId: 0,
    isVisible: false,
    layerKind: PsLayerKind.Shape,
    pathId: 0,
    clippingTargetLayerId: 4,
    clippedLayerIds: [],
    layerMaskId: 0,
    isLayerMaskLinked: false,
    isLayerEffectEnabled: false,
    linkedLayerIds: [],
    layerStyle: {
      blendingOptions: {
        blendMode: PsBlendMode.Normal,
        opacity: 100,
        fillOpacity: 100,
        channels: {
          red: true,
          green: true,
          blue: true,
        },
        knockout: PsBlendingOptionsKnockout.None,
        blendInteriorEffects: true,
        blendClippedLayers: true,
        transparencyShapesLayer: 0,
        layerMaskHideEffects: false,
        vectorMaskHideEffects: false,
        blendIf: PsBlendingOptionsBlendIf.Gray,
        blendIfCurrentLayerBlackValue: 0,
        blendIfCurrentLayerWhiteValue: 255,
        blendIfUnderlyingLayerBlackValue: 0,
        blendIfUnderlyingLayerWhiteValue: 255,
      },
      bevelEmboss: {
        isEnabled: false,
        style: PsBevelEmbossStyle.Innerbevel,
        technique: PsBevelEmbossTechnique.Smooth,
        depth: 0,
        direction: PsBevelEmbossDirection.Up,
        size: 0,
        soften: 0,
        angleOfLightSource: 120,
        altitude: 30,
        useGlobalLight: false,
        glossContourCurveId: 0,
        isGlossContourAntiAliased: false,
        highlightMode: PsBlendMode.Screen,
        highlightColor: {
          red: 255,
          green: 255,
          blue: 255,
        },
        highlightOpacity: 50,
        shadowMode: PsBlendMode.Multiply,
        shadowColor: {
          red: 0,
          green: 0,
          blue: 0,
        },
        shadowOpacity: 50,
        isContourEnabled: false,
        contour: {
          contourCurveId: 0,
          isAntiAliased: false,
          range: 50,
        },
        isTextureEnabled: false,
        texture: {
          patternId: 0,
          scale: 100,
          depth: 1,
          isInverted: false,
          isLinkedWithLayer: true,
        },
      },
      strokes: [],
      innerShadows: [],
      innerGlow: {
        isEnabled: false,
        blendMode: PsBlendMode.Screen,
        opacity: 35,
        noise: 0,
        colorOrGradient: PsColorOrGradient.Gradient,
        color: {
          red: 255,
          green: 255,
          blue: 255,
        },
        gradientId: 0,
        gradientMethod: PsGradientMethod.Perceptual,
        technique: PsInnerGlowTechnique.Softer,
        source: PsInnerGlowSource.Edge,
        choke: 0,
        size: 7,
        contourCurveId: 0,
        isContourAntiAliased: false,
        contourRange: 50,
        jitter: 0,
      },
      satin: {
        isEnabled: false,
        blendMode: PsBlendMode.Multiply,
        color: {
          red: 0,
          green: 0,
          blue: 0,
        },
        opacity: 50,
        angle: 90,
        distance: 50,
        size: 80,
        contourCurveId: 0,
        isContourAntiAliased: true,
        isContourInverted: true,
      },
      colorOverlays: [],
      gradientOverlays: [],
      patternOverlay: {
        isEnabled: false,
        blendMode: PsBlendMode.Normal,
        opacity: 100,
        patternId: 0,
        angle: 0,
        scale: 100,
        isLinkedWithLayer: true,
      },
      outerGlow: {
        isEnabled: false,
        blendMode: PsBlendMode.Screen,
        opacity: 35,
        noise: 0,
        colorOrGradient: PsColorOrGradient.Gradient,
        color: {
          red: 255,
          green: 255,
          blue: 255,
        },
        gradientId: 0,
        gradientMethod: PsGradientMethod.Perceptual,
        technique: PsOuterGlowTechnique.Softer,
        spread: 0,
        size: 7,
        contourCurveId: 0,
        isContourAntiAliased: false,
        contourRange: 50,
        jitter: 0,
      },
      dropShadows: [],
    },
    x: 200,
    y: 100,
    width: 90,
    height: 45,
  },
  {
    id: 6,
    layerName: 'Shape Layer 6',
    lockStatus: {
      transparentPixelLock: false,
      imagePixelLock: false,
      positionLock: false,
      allAttributesLock: false,
    },
    layerGroupId: 0,
    isVisible: true,
    layerKind: PsLayerKind.Shape,
    pathId: 0,
    clippingTargetLayerId: 0,
    clippedLayerIds: [],
    layerMaskId: 0,
    isLayerMaskLinked: false,
    isLayerEffectEnabled: false,
    linkedLayerIds: [],
    layerStyle: {
      blendingOptions: {
        blendMode: PsBlendMode.Normal,
        opacity: 100,
        fillOpacity: 100,
        channels: {
          red: true,
          green: true,
          blue: true,
        },
        knockout: PsBlendingOptionsKnockout.None,
        blendInteriorEffects: true,
        blendClippedLayers: true,
        transparencyShapesLayer: 0,
        layerMaskHideEffects: false,
        vectorMaskHideEffects: false,
        blendIf: PsBlendingOptionsBlendIf.Gray,
        blendIfCurrentLayerBlackValue: 0,
        blendIfCurrentLayerWhiteValue: 255,
        blendIfUnderlyingLayerBlackValue: 0,
        blendIfUnderlyingLayerWhiteValue: 255,
      },
      bevelEmboss: {
        isEnabled: false,
        style: PsBevelEmbossStyle.Innerbevel,
        technique: PsBevelEmbossTechnique.Smooth,
        depth: 0,
        direction: PsBevelEmbossDirection.Up,
        size: 0,
        soften: 0,
        angleOfLightSource: 120,
        altitude: 30,
        useGlobalLight: false,
        glossContourCurveId: 0,
        isGlossContourAntiAliased: false,
        highlightMode: PsBlendMode.Screen,
        highlightColor: {
          red: 255,
          green: 255,
          blue: 255,
        },
        highlightOpacity: 50,
        shadowMode: PsBlendMode.Multiply,
        shadowColor: {
          red: 0,
          green: 0,
          blue: 0,
        },
        shadowOpacity: 50,
        isContourEnabled: false,
        contour: {
          contourCurveId: 0,
          isAntiAliased: false,
          range: 50,
        },
        isTextureEnabled: false,
        texture: {
          patternId: 0,
          scale: 100,
          depth: 1,
          isInverted: false,
          isLinkedWithLayer: true,
        },
      },
      strokes: [],
      innerShadows: [],
      innerGlow: {
        isEnabled: false,
        blendMode: PsBlendMode.Screen,
        opacity: 35,
        noise: 0,
        colorOrGradient: PsColorOrGradient.Gradient,
        color: {
          red: 255,
          green: 255,
          blue: 255,
        },
        gradientId: 0,
        gradientMethod: PsGradientMethod.Perceptual,
        technique: PsInnerGlowTechnique.Softer,
        source: PsInnerGlowSource.Edge,
        choke: 0,
        size: 7,
        contourCurveId: 0,
        isContourAntiAliased: false,
        contourRange: 50,
        jitter: 0,
      },
      satin: {
        isEnabled: false,
        blendMode: PsBlendMode.Multiply,
        color: {
          red: 0,
          green: 0,
          blue: 0,
        },
        opacity: 50,
        angle: 90,
        distance: 50,
        size: 80,
        contourCurveId: 0,
        isContourAntiAliased: true,
        isContourInverted: true,
      },
      colorOverlays: [],
      gradientOverlays: [],
      patternOverlay: {
        isEnabled: false,
        blendMode: PsBlendMode.Normal,
        opacity: 100,
        patternId: 0,
        angle: 0,
        scale: 100,
        isLinkedWithLayer: true,
      },
      outerGlow: {
        isEnabled: false,
        blendMode: PsBlendMode.Screen,
        opacity: 35,
        noise: 0,
        colorOrGradient: PsColorOrGradient.Gradient,
        color: {
          red: 255,
          green: 255,
          blue: 255,
        },
        gradientId: 0,
        gradientMethod: PsGradientMethod.Perceptual,
        technique: PsOuterGlowTechnique.Softer,
        spread: 0,
        size: 7,
        contourCurveId: 0,
        isContourAntiAliased: false,
        contourRange: 50,
        jitter: 0,
      },
      dropShadows: [],
    },
    x: 180,
    y: 120,
    width: 100,
    height: 100,
  },
];
